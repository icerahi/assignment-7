import type { Prisma } from '@prisma/client';
import * as z from 'zod';
import { WorkExperienceOrderByWithRelationInputObjectSchema as WorkExperienceOrderByWithRelationInputObjectSchema } from './objects/WorkExperienceOrderByWithRelationInput.schema';
import { WorkExperienceWhereInputObjectSchema as WorkExperienceWhereInputObjectSchema } from './objects/WorkExperienceWhereInput.schema';
import { WorkExperienceWhereUniqueInputObjectSchema as WorkExperienceWhereUniqueInputObjectSchema } from './objects/WorkExperienceWhereUniqueInput.schema';
import { WorkExperienceCountAggregateInputObjectSchema as WorkExperienceCountAggregateInputObjectSchema } from './objects/WorkExperienceCountAggregateInput.schema';
import { WorkExperienceMinAggregateInputObjectSchema as WorkExperienceMinAggregateInputObjectSchema } from './objects/WorkExperienceMinAggregateInput.schema';
import { WorkExperienceMaxAggregateInputObjectSchema as WorkExperienceMaxAggregateInputObjectSchema } from './objects/WorkExperienceMaxAggregateInput.schema';
import { WorkExperienceAvgAggregateInputObjectSchema as WorkExperienceAvgAggregateInputObjectSchema } from './objects/WorkExperienceAvgAggregateInput.schema';
import { WorkExperienceSumAggregateInputObjectSchema as WorkExperienceSumAggregateInputObjectSchema } from './objects/WorkExperienceSumAggregateInput.schema';

export const WorkExperienceAggregateSchema: z.ZodType<Prisma.WorkExperienceAggregateArgs> = z.object({ orderBy: z.union([WorkExperienceOrderByWithRelationInputObjectSchema, WorkExperienceOrderByWithRelationInputObjectSchema.array()]).optional(), where: WorkExperienceWhereInputObjectSchema.optional(), cursor: WorkExperienceWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([ z.literal(true), WorkExperienceCountAggregateInputObjectSchema ]).optional(), _min: WorkExperienceMinAggregateInputObjectSchema.optional(), _max: WorkExperienceMaxAggregateInputObjectSchema.optional(), _avg: WorkExperienceAvgAggregateInputObjectSchema.optional(), _sum: WorkExperienceSumAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.WorkExperienceAggregateArgs>;

export const WorkExperienceAggregateZodSchema = z.object({ orderBy: z.union([WorkExperienceOrderByWithRelationInputObjectSchema, WorkExperienceOrderByWithRelationInputObjectSchema.array()]).optional(), where: WorkExperienceWhereInputObjectSchema.optional(), cursor: WorkExperienceWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([ z.literal(true), WorkExperienceCountAggregateInputObjectSchema ]).optional(), _min: WorkExperienceMinAggregateInputObjectSchema.optional(), _max: WorkExperienceMaxAggregateInputObjectSchema.optional(), _avg: WorkExperienceAvgAggregateInputObjectSchema.optional(), _sum: WorkExperienceSumAggregateInputObjectSchema.optional() }).strict();